<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://xamarin.com/schemas/2014/forms"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:xct="http://xamarin.com/schemas/2020/toolkit"
             xmlns:fragments="clr-namespace:ToDoApp.Views.Fragments"
             xmlns:model="clr-namespace:ToDoApp.Models"
             x:Class="ToDoApp.Views.TasksPage"
             NavigationPage.HasNavigationBar="False">
    <ContentPage.Content>
        <Grid 
            BackgroundColor="{AppThemeBinding Light={StaticResource LightPageBackgroundColor}, Dark={StaticResource DarkPageBackgroundColor}}"
            RowDefinitions="Auto, Auto, Auto, Auto, Auto, *">
            <fragments:ConnectionView
                Grid.Row="0"/>
            <Grid
                Grid.Row="1"
                ColumnDefinitions="Auto, *"
                RowDefinitions="Auto, Auto"
                RowSpacing="0"
                Margin="16, 16, 0, 0">
                <Ellipse
                    Grid.Column="0"
                    Grid.Row="0"
                    Grid.RowSpan="2"
                    Fill="#233e8b"
                    Aspect="Uniform"
                    WidthRequest="52"
                    HeightRequest="54"></Ellipse>
                <Label
                    Grid.Column="0"
                    Grid.Row="0"
                    Grid.RowSpan="2"
                    Text="&#xf2bd;"
                    TextColor="White"
                    FontSize="48"
                    FontFamily="FontAwesome_Solid"
                    VerticalOptions="Center"
                    HorizontalOptions="Center"
                    Margin="8, 0, 8, 0"></Label>
                <Label
                    Grid.Column="1"
                    Grid.Row="0"
                    Style="{StaticResource Body1_CairoRegular}"
                    Text="Welcome back"
                    TextColor="{AppThemeBinding Light={StaticResource LightSecondaryTextColor}, Dark={StaticResource DarkSecondaryTextColor}}"></Label>
                <Label
                    Grid.Column="1"
                    Grid.Row="1"
                    Margin="0, -10, 0, 0"
                    Style="{StaticResource Headline4_CairoBold}"
                    Text="{Binding Name}"
                    TextColor="{AppThemeBinding Light={StaticResource LightPrimaryTextColor}, Dark={StaticResource DarkPrimaryTextColor}}"></Label>
            </Grid>
            <Grid
                Grid.Row="2"
                Margin="16, 0, 16, 0"
                HeightRequest="40"
                ColumnDefinitions="Auto, *, 40, 40">
                <Label
                    Grid.Column="0"
                    Text="{Binding Week.WeekString}"
                    TextColor="#333"
                    Style="{StaticResource Subtitle1_CairoBold}"
                    VerticalOptions="Center"></Label>
                <Button
                    Grid.Column="2"
                    CornerRadius="16"
                    Text="&#xf053;"
                    TextColor="White"
                    FontSize="18"
                    FontFamily="FontAwesome_Solid"
                    HorizontalOptions="EndAndExpand"
                    BackgroundColor="#233e8b"
                    Command="{Binding PreviousWeekCommand}"
                    CommandParameter="{Binding Week.StartDay}"></Button>
                <Button
                    Grid.Column="3"
                    CornerRadius="16"
                    Text="&#xf054;"
                    TextColor="White"
                    FontSize="18"
                    FontFamily="FontAwesome_Solid"
                    HorizontalOptions="EndAndExpand"
                    BackgroundColor="#233e8b"
                    Command="{Binding NextWeekCommand}"
                    CommandParameter="{Binding Week.LastDay}"></Button>
            </Grid>
            <Grid
                x:Name="daysList"
                Grid.Row="3"
                ColumnDefinitions="*, *, *, *, *, *"
                BindableLayout.ItemsSource="{Binding DaysList}"
                Margin="16, 0, 16, 0">
                <BindableLayout.ItemTemplate>
                    <DataTemplate>
                        <Frame
                            Grid.Column="{Binding Column}"
                            Padding="4"
                            CornerRadius="16">
                            <Frame.GestureRecognizers>
                                <TapGestureRecognizer Command="{Binding BindingContext.DayCommand, Source={x:Reference daysList}}" CommandParameter="{Binding .}"></TapGestureRecognizer>
                            </Frame.GestureRecognizers>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup>
                                    <VisualState x:Name="normal">
                                        <VisualState.StateTriggers>
                                            <StateTrigger IsActive="{Binding State, Converter={xct:EqualConverter}, ConverterParameter={x:Static model:DayStateEnum.Normal}}"></StateTrigger>
                                        </VisualState.StateTriggers>
                                        <VisualState.Setters>
                                            <Setter Property="BackgroundColor" Value="White"/>
                                            <Setter Property="HasShadow" Value="True"/>
                                        </VisualState.Setters>
                                    </VisualState>
                                    <VisualState x:Name="active">
                                        <VisualState.StateTriggers>
                                            <StateTrigger IsActive="{Binding State, Converter={xct:EqualConverter}, ConverterParameter={x:Static model:DayStateEnum.Active}}"></StateTrigger>
                                        </VisualState.StateTriggers>
                                        <VisualState.Setters>
                                            <Setter Property="BackgroundColor" Value="#233e8b"/>
                                            <Setter Property="HasShadow" Value="True"/>
                                        </VisualState.Setters>
                                    </VisualState>
                                    <VisualState x:Name="past">
                                        <VisualState.StateTriggers>
                                            <StateTrigger IsActive="{Binding State, Converter={xct:EqualConverter}, ConverterParameter={x:Static model:DayStateEnum.Past}}"></StateTrigger>
                                        </VisualState.StateTriggers>
                                        <VisualState.Setters>
                                            <Setter Property="BackgroundColor" Value="{AppThemeBinding Light={StaticResource LightCardUnselectedBackgroundColor}, Dark={StaticResource DarkCardUnselectedBackgroundColor}}"/>
                                            <Setter Property="HasShadow" Value="False"/>
                                        </VisualState.Setters>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <StackLayout
                                Spacing="0">
                                <Label
                                    Text="{Binding DayName}"
                                    Style="{StaticResource Body1_CairoRegular}"
                                    CharacterSpacing="-1"
                                    Margin="0"
                                    HorizontalTextAlignment="Center">
                                    <VisualStateManager.VisualStateGroups>
                                        <VisualStateGroup>
                                            <VisualState x:Name="normal">
                                                <VisualState.StateTriggers>
                                                    <StateTrigger IsActive="{Binding State, Converter={xct:EqualConverter}, ConverterParameter={x:Static model:DayStateEnum.Normal}}"></StateTrigger>
                                                </VisualState.StateTriggers>
                                                <VisualState.Setters>
                                                    <Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource LightPrimaryTextColor}, Dark={StaticResource DarkPrimaryTextColor}}"/>
                                                    <Setter Property="TextTransform" Value="None"/>
                                                </VisualState.Setters>
                                            </VisualState>
                                            <VisualState x:Name="active">
                                                <VisualState.StateTriggers>
                                                    <StateTrigger IsActive="{Binding State, Converter={xct:EqualConverter}, ConverterParameter={x:Static model:DayStateEnum.Active}}"></StateTrigger>
                                                </VisualState.StateTriggers>
                                                <VisualState.Setters>
                                                    <Setter Property="FontFamily" Value="Cairo_Bold"/>
                                                    <Setter Property="TextColor" Value="White"/>
                                                    <Setter Property="TextTransform" Value="Uppercase"/>
                                                </VisualState.Setters>
                                            </VisualState>
                                            <VisualState x:Name="past">
                                                <VisualState.StateTriggers>
                                                    <StateTrigger IsActive="{Binding State, Converter={xct:EqualConverter}, ConverterParameter={x:Static model:DayStateEnum.Past}}"></StateTrigger>
                                                </VisualState.StateTriggers>
                                                <VisualState.Setters>
                                                    <Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource LightSecondaryTextColor}, Dark={StaticResource DarkSecondaryTextColor}}"/>
                                                    <Setter Property="TextTransform" Value="None"/>
                                                </VisualState.Setters>
                                            </VisualState>
                                        </VisualStateGroup>
                                    </VisualStateManager.VisualStateGroups>
                                </Label>
                                <Label
                                    CharacterSpacing="-1"
                                    HorizontalTextAlignment="Center"
                                    Style="{StaticResource Subtitle1_CairoRegular}"
                                    Text="{Binding Day}">
                                    <VisualStateManager.VisualStateGroups>
                                        <VisualStateGroup>
                                            <VisualState x:Name="normal">
                                                <VisualState.StateTriggers>
                                                    <StateTrigger IsActive="{Binding State, Converter={xct:EqualConverter}, ConverterParameter={x:Static model:DayStateEnum.Normal}}"></StateTrigger>
                                                </VisualState.StateTriggers>
                                                <VisualState.Setters>
                                                    <Setter Property="Margin" Value="0, -4, 0, 0"/>
                                                    <Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource LightPrimaryTextColor}, Dark={StaticResource DarkPrimaryTextColor}}"/>
                                                </VisualState.Setters>
                                            </VisualState>
                                            <VisualState x:Name="active">
                                                <VisualState.StateTriggers>
                                                    <StateTrigger IsActive="{Binding State, Converter={xct:EqualConverter}, ConverterParameter={x:Static model:DayStateEnum.Active}}"></StateTrigger>
                                                </VisualState.StateTriggers>
                                                <VisualState.Setters>
                                                    <Setter Property="FontFamily" Value="Cairo_Bold"/>
                                                    <Setter Property="Margin" Value="0, -8, 0, 0"/>
                                                    <Setter Property="TextColor" Value="White"/>
                                                </VisualState.Setters>
                                            </VisualState>
                                            <VisualState x:Name="past">
                                                <VisualState.StateTriggers>
                                                    <StateTrigger IsActive="{Binding State, Converter={xct:EqualConverter}, ConverterParameter={x:Static model:DayStateEnum.Past}}"></StateTrigger>
                                                </VisualState.StateTriggers>
                                                <VisualState.Setters>
                                                    <Setter Property="Margin" Value="0, -4, 0, 0"/>
                                                    <Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource LightSecondaryTextColor}, Dark={StaticResource DarkSecondaryTextColor}}"/>
                                                </VisualState.Setters>
                                            </VisualState>
                                        </VisualStateGroup>
                                    </VisualStateManager.VisualStateGroups>
                                </Label>
                            </StackLayout>
                        </Frame>
                    </DataTemplate>
                </BindableLayout.ItemTemplate>
            </Grid>
            <Label
                Grid.Row="4"
                Text="Tasks"
                TextColor="#333"
                Style="{StaticResource Subtitle1_CairoBold}"
                Margin="16, 0, 0, 0"></Label>
            <StackLayout
                Grid.Row="5"
                xct:StateLayout.CurrentState="{Binding TaskListState}">
                <xct:StateLayout.StateViews>
                    <xct:StateView 
                        StateKey="Loading"
                        VerticalOptions="FillAndExpand">
                        <StackLayout 
                            HorizontalOptions="Center"
                            VerticalOptions="Center">
                            <ActivityIndicator
                                Color="#233e8b"
                                IsRunning="True"/>
                            <Label 
                                Text="Loading..." 
                                HorizontalOptions="Center" />
                        </StackLayout>
                    </xct:StateView>
                    <xct:StateView 
                        StateKey="Empty"
                        VerticalOptions="FillAndExpand">
                        <StackLayout
                            HorizontalOptions="Center"
                            VerticalOptions="Center">
                            <Label
                                Text="No tasks for this day."></Label>
                        </StackLayout>
                    </xct:StateView>
                </xct:StateLayout.StateViews>
                <CollectionView
                    x:Name="TaskItems"
                    ItemsSource="{Binding TaskList}">
                    <CollectionView.ItemTemplate>
                        <DataTemplate>
                            <StackLayout>
                                <StackLayout.GestureRecognizers>
                                    <DropGestureRecognizer
                                        AllowDrop="True"
                                        DragLeaveCommand="{Binding BindingContext.ItemDragLeave, Source={x:Reference TaskItems}}"
                                        DragLeaveCommandParameter="{Binding}"
                                        DragOverCommand="{Binding BindingContext.ItemDraggedOver, Source={x:Reference TaskItems}}"
                                        DragOverCommandParameter="{Binding}"
                                        Drop="DropGestureRecognizer_Drop_Collection"
                                        DropCommand="{Binding BindingContext.ItemDropped, Source={x:Reference TaskItems}}"
                                        DropCommandParameter="{Binding}" />
                                </StackLayout.GestureRecognizers>
                                <Grid
                                    BackgroundColor="#e5f1fa"
                                    HeightRequest="76"
                                    Margin="0, 4, 0, 0"
                                    IsVisible="{Binding isBeingDraggedOver}" />
                                <Frame
                                    Padding="8, 12, 8, 12"
                                    Margin="8, 4, 8, 4"
                                    BackgroundColor="White"
                                    CornerRadius="24">
                                    <Frame.GestureRecognizers>
                                        <DragGestureRecognizer
                                            CanDrag="True"
                                            DragStarting="DragGestureRecognizer_DragStarting_Collection"
                                            DragStartingCommand="{Binding BindingContext.ItemDragged, Source={x:Reference TaskItems}}"
                                            DragStartingCommandParameter="{Binding}" />
                                        <TapGestureRecognizer Command="{Binding BindingContext.CheckTaskCommand, Source={x:Reference TaskItems}}" CommandParameter="{Binding}"></TapGestureRecognizer>
                                    </Frame.GestureRecognizers>
                                    <VisualStateManager.VisualStateGroups>
                                        <VisualStateGroup>
                                            <VisualState x:Name="normal">
                                                <VisualState.StateTriggers>
                                                    <StateTrigger IsActive="{Binding archived, Converter={xct:InvertedBoolConverter}}"></StateTrigger>
                                                </VisualState.StateTriggers>
                                                <VisualState.Setters>
                                                    <Setter Property="HasShadow" Value="True"/>
                                                </VisualState.Setters>
                                            </VisualState>
                                            <VisualState x:Name="done">
                                                <VisualState.StateTriggers>
                                                    <StateTrigger IsActive="{Binding archived}"></StateTrigger>
                                                </VisualState.StateTriggers>
                                                <VisualState.Setters>
                                                    <Setter Property="HasShadow" Value="False"/>
                                                </VisualState.Setters>
                                            </VisualState>
                                        </VisualStateGroup>
                                    </VisualStateManager.VisualStateGroups>
                                    <Grid
                                        ColumnDefinitions="Auto, Auto"
                                        RowDefinitions="Auto, Auto">
                                        <Label
                                            Grid.Row="0"
                                            Grid.Column="0"
                                            Grid.RowSpan="2"
                                            Text="{Binding archived, Converter={StaticResource DoneIconConverter}}"
                                            FontSize="24"
                                            FontFamily="FontAwesome_Regular"
                                            HorizontalOptions="Start"
                                            VerticalOptions="Center"
                                            Margin="12, 0, 0, 0">
                                            <VisualStateManager.VisualStateGroups>
                                                <VisualStateGroup>
                                                    <VisualState x:Name="normal">
                                                        <VisualState.StateTriggers>
                                                            <StateTrigger IsActive="{Binding archived, Converter={xct:InvertedBoolConverter}}"></StateTrigger>
                                                        </VisualState.StateTriggers>
                                                        <VisualState.Setters>
                                                            <Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource LightPrimaryTextColor}, Dark={StaticResource DarkPrimaryTextColor}}"/>
                                                        </VisualState.Setters>
                                                    </VisualState>
                                                    <VisualState x:Name="done">
                                                        <VisualState.StateTriggers>
                                                            <StateTrigger IsActive="{Binding archived}"></StateTrigger>
                                                        </VisualState.StateTriggers>
                                                        <VisualState.Setters>
                                                            <Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource LightSecondaryTextColor}, Dark={StaticResource DarkSecondaryTextColor}}"/>
                                                        </VisualState.Setters>
                                                    </VisualState>
                                                </VisualStateGroup>
                                            </VisualStateManager.VisualStateGroups>
                                        </Label>
                                        <Label 
                                            Grid.Row="0"
                                            Grid.Column="1"
                                            Text="{Binding task}"
                                            FontFamily="Cairo_SemiBold"
                                            FontSize="{StaticResource Body1FontSize}"
                                            Margin="8, 0, 8, 0"
                                            VerticalOptions="Center">
                                            <VisualStateManager.VisualStateGroups>
                                                <VisualStateGroup>
                                                    <VisualState x:Name="normal">
                                                        <VisualState.StateTriggers>
                                                            <StateTrigger IsActive="{Binding archived, Converter={xct:InvertedBoolConverter}}"></StateTrigger>
                                                        </VisualState.StateTriggers>
                                                        <VisualState.Setters>
                                                            <Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource LightPrimaryTextColor}, Dark={StaticResource DarkPrimaryTextColor}}"/>
                                                            <Setter Property="TextDecorations" Value="None"/>
                                                        </VisualState.Setters>
                                                    </VisualState>
                                                    <VisualState x:Name="done">
                                                        <VisualState.StateTriggers>
                                                            <StateTrigger IsActive="{Binding archived}"></StateTrigger>
                                                        </VisualState.StateTriggers>
                                                        <VisualState.Setters>
                                                            <Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource LightSecondaryTextColor}, Dark={StaticResource DarkSecondaryTextColor}}"/>
                                                            <Setter Property="TextDecorations" Value="Strikethrough"/>
                                                        </VisualState.Setters>
                                                    </VisualState>
                                                </VisualStateGroup>
                                            </VisualStateManager.VisualStateGroups>
                                        </Label>
                                        <StackLayout
                                            Grid.Row="1"
                                            Grid.Column="1"
                                            Orientation="Horizontal"
                                            Margin="8, -8, 8, 0">
                                            <Ellipse
                                                Fill="#233e8b"
                                                Aspect="Uniform"
                                                WidthRequest="12"
                                                HeightRequest="12"
                                                VerticalOptions="CenterAndExpand"></Ellipse>
                                            <Label 
                                                Text="{Binding projectName}"
                                                FontFamily="Cairo_Regular"
                                                FontSize="{StaticResource Body2FontSize}"
                                                VerticalOptions="CenterAndExpand">
                                                <VisualStateManager.VisualStateGroups>
                                                    <VisualStateGroup>
                                                        <VisualState x:Name="normal">
                                                            <VisualState.StateTriggers>
                                                                <StateTrigger IsActive="{Binding archived, Converter={xct:InvertedBoolConverter}}"></StateTrigger>
                                                            </VisualState.StateTriggers>
                                                            <VisualState.Setters>
                                                                <Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource LightPrimaryTextColor}, Dark={StaticResource DarkPrimaryTextColor}}"/>
                                                                <Setter Property="TextDecorations" Value="None"/>
                                                            </VisualState.Setters>
                                                        </VisualState>
                                                        <VisualState x:Name="done">
                                                            <VisualState.StateTriggers>
                                                                <StateTrigger IsActive="{Binding archived}"></StateTrigger>
                                                            </VisualState.StateTriggers>
                                                            <VisualState.Setters>
                                                                <Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource LightSecondaryTextColor}, Dark={StaticResource DarkSecondaryTextColor}}"/>
                                                                <Setter Property="TextDecorations" Value="Strikethrough"/>
                                                            </VisualState.Setters>
                                                        </VisualState>
                                                    </VisualStateGroup>
                                                </VisualStateManager.VisualStateGroups>
                                            </Label>
                                        </StackLayout>
                                     </Grid>
                                </Frame>
                            </StackLayout>
                        </DataTemplate>
                    </CollectionView.ItemTemplate>
                </CollectionView>
            </StackLayout>
            <Frame 
                Grid.Row="5" 
                BackgroundColor="#233e8b"
                VerticalOptions="End" 
                HorizontalOptions="End" 
                CornerRadius="18" 
                TranslationY="-30" 
                TranslationX="-30"
                Padding="18, 16, 18, 16">
                <Frame.GestureRecognizers>
                    <TapGestureRecognizer Command="{Binding AddCommand}"></TapGestureRecognizer>
                </Frame.GestureRecognizers>
                <Label
                    Text="&#xf067;"
                    FontSize="30"
                    FontFamily="FontAwesome_Solid"
                    TextColor="White"
                    HorizontalOptions="Center"
                    VerticalOptions="Center"></Label>
            </Frame>
        </Grid>
    </ContentPage.Content>
</ContentPage>